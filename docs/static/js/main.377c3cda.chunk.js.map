{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifs.js","hooks/useFetchGifts.js","components/GiftGrid.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GiftGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","images","downsized_medium","require","useEffect","GiftGrid","loading","state","setstate","then","imgs","useFetchGifts","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,UAaiD,MCT7DG,EATM,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBN,EAFgB,iDAEgCO,UACpDF,GAHoB,+DAKHG,MAAMR,GALH,cAKhBS,EALgB,gBAMCA,EAAKC,OANN,uBAMdC,EANc,EAMdA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAZhB,kBAgBfY,GAhBe,4CAAH,sD,ECEWK,EAAQ,GAAhCjC,E,EAAAA,SAAUkC,E,EAAAA,UCGLC,EAAW,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,EDDb,SAACA,GAAc,IAAD,EACbrB,EAAS,CAC/B2B,KAAM,GACNS,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAJ,GAAU,WACNd,EAASC,GAAUkB,MAAK,SAACC,GACrBF,EAAS,CACLX,KAAMa,EACNJ,SAAS,SAGlB,CAACf,IAEGgB,ECbyBI,CAAcpB,GAAlCU,EAD0B,EAChCJ,KAAcS,EADkB,EAClBA,QAEtB,OACE,oCACE,wBAAInB,UAAU,qCAAqCI,GAIjDe,GAAW,uBAAGnB,UAAU,oCAAb,WAGX,yBAAKA,UAAU,aACZc,EAAOF,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAcY,IAAKZ,EAAIhB,IAAQgB,UCC5Ba,EAhBO,WAAO,IAAD,EACU3C,mBAAS,CAAC,cADpB,mBACnB4C,EADmB,KACP7C,EADO,KAG1B,OACE,oCACE,+CADF,IAC2B,kBAAC,EAAD,CAAaA,cAAeA,IAAkB,IACvE,6BACA,4BACG6C,EAAWf,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAAUqB,IAAKrB,EAAUA,SAAUA,U,MCR7CwB,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.377c3cda.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(''); // si se deja useState vacio (undefined)\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cate) => [inputValue, ...cate]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />{' '}\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nconst GiftGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GiftGridItem;\n","export const getGifts = async (category) => {\n  // encodeURI -> para quitar espacios\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=3givnG33wyI7m4BtLxcKnW4yVE4457WV`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifts = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url, // ? -> por si no trae imagenes\n    };\n  });\n\n  return gifts;\n};\n","import { getGifts } from '../helpers/getGifs';\n\nconst { useState, useEffect } = require('react');\n\nexport const useFetchGifts = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getGifts(category).then((imgs) => {\n            setstate({\n                data: imgs,\n                loading: false,\n            });\n        });\n    }, [category]);\n\n    return state; // {data: [], loading: true}\n};","import React from 'react';\n\nimport GiftGridItem from './GiftGridItem';\nimport { useFetchGifts } from '../hooks/useFetchGifts';\n\nexport const GiftGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifts(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n      {\n        // si la condici√≥n es true, va a evaluarlo sino nada\n        loading && <p className=\"animate__animated animate__flash\">loading</p>\n      }\n      {\n        <div className=\"card-grid\">\n          {images.map((img) => (\n            <GiftGridItem key={img.id} {...img} />\n          ))}\n        </div>\n      }\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GiftGrid } from './components/GiftGrid';\n\nconst GiftExpertApp = () => {\n  const [categories, setCategories] = useState(['One Punch']);\n\n  return (\n    <>\n      <h2> GiftExpertApp </h2> <AddCategory setCategories={setCategories} />{' '}\n      <hr />\n      <ol>\n        {categories.map((category) => (\n          <GiftGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GiftExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}